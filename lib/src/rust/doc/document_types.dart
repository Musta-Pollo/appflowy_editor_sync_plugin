// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.8.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:appflowy_editor_sync_plugin/utils/uintlist_convertor.dart';

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'document_types.freezed.dart';
part 'document_types.g.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`

@freezed
class BlockActionDoc with _$BlockActionDoc {
  const factory BlockActionDoc({
    required BlockActionTypeDoc action,
    required BlockDoc block,
    @Uint32ListConverter() required Uint32List path,
    @Uint32ListConverter() Uint32List? oldPath,
  }) = _BlockActionDoc;

  factory BlockActionDoc.fromJson(Map<String, dynamic> json) =>
      _$BlockActionDocFromJson(json);
}

enum BlockActionTypeDoc { insert, update, delete, move }

@freezed
class BlockDoc with _$BlockDoc {
  const factory BlockDoc({
    required String id,
    required String ty,
    required Map<String, String> attributes,
    String? delta,
    String? parentId,
    String? prevId,
    String? oldParentId,
  }) = _BlockDoc;

  factory BlockDoc.fromJson(Map<String, dynamic> json) =>
      _$BlockDocFromJson(json);
}

class ConcurrentAccessError implements FrbException {
  final String message;

  const ConcurrentAccessError({required this.message});

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<ConcurrentAccessError> newInstance({required String message}) =>
      RustLib.instance.api.crateDocDocumentTypesConcurrentAccessErrorNew(
        message: message,
      );

  @override
  int get hashCode => message.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ConcurrentAccessError &&
          runtimeType == other.runtimeType &&
          message == other.message;
}

@freezed
class DocumentState with _$DocumentState {
  const factory DocumentState({
    required String docId,
    required Map<String, BlockDoc> blocks,
    required Map<String, List<String>> childrenMap,
  }) = _DocumentState;

  factory DocumentState.fromJson(Map<String, dynamic> json) =>
      _$DocumentStateFromJson(json);
}

@freezed
class FailedToDecodeUpdates with _$FailedToDecodeUpdates {
  const factory FailedToDecodeUpdates({
    required List<String> failedUpdatesIds,
  }) = _FailedToDecodeUpdates;

  factory FailedToDecodeUpdates.fromJson(Map<String, dynamic> json) =>
      _$FailedToDecodeUpdatesFromJson(json);
}
